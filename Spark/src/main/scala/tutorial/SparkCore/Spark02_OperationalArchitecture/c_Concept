核心概念

Executor & Core
Spark Executor 是集群中运行在工作节点中的一个JVM进程，是整个集群中的专门用于计算的节点。
在提交应用中，可以提供参数指定计算节点的个数，以及对应的资源。这里的资源一般指的是工作节点
Executor的内存大小和使用的虚拟CPU核数量。
//可以理解为线程的数量。
--num-executors     配置Executor的数量
--executor-memory   配置每个Executor的内存大小
--executor-cores    配置每个Executor的虚拟CPU核心数量

并行度（Parallelism）
在分布式计算框架中
//并行：同时在cpu中执行
//并发：任务可能在等待cpu的过程
整个集群并行执行任务的数量称之为并行度。


有向无环图（DAG）
//第一代计算框架：MR
//第二代计算框架：Tez（作业间DAG）
//第三代计算框架：Spark（作业内部DAG）
点代表了任务，线表示任务间的关系。无环表示不能有死循环。
DAG(Directed Acyclic Graph)有向无环图是由点和线组成的拓扑图型，该图形具有方向，不会闭环。