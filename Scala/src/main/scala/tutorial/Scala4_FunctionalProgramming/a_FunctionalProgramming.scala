package tutorial.Scala4_FunctionalProgramming

/**
 * @author Shiwen Li
 * @account CN116237626
 * @create 2021-03-17 19:52
 * @note 基础函数编程
 */
object a_FunctionalProgramming {
  /**
   * scala编程语言将函数式编程和面向对象编程完美地融合在一起
   * 	面向对象编程
   * 分解对象，行为，属性，然后通过对象的关系以及行为的调用来解决问题
   * 	函数式编程
   * 将问题分解成一个一个的步骤，将每个步骤进行封装（函数），通过调用这些封装好的功能按照指定的步骤，解决问题。
   */

  //todo 基本语法
  /**
   * [修饰符] def 函数名 ( 参数列表 ) [:返回值类型] = {
   *   函数体
   * }
   *
   * private def test( s : String ) : Unit = {
   *   println(s)
   * }
   */

  //todo 函数&方法
  /**
   * 	scala 中存在方法与函数两个不同的概念，二者在语义上的区别很小。
   * scala 方法是类的一部分，而函数是一个对象，可以赋值给一个变量。
   * 换句话来说在类中定义的函数即是方法。scala 中的方法跟 Java 的类似，方法是组成类的一部分。
   * scala 中的函数则是一个完整的对象。
   * 	Scala中的方法和函数从语法概念上来讲，一般不好区分，所以简单的理解就是：
   * 方法也是函数。只不过类中声明的函数称之为方法，其他场合声明的就是函数了。类中的方法是有重载和重写的。
   * 而函数可就没有重载和重写的概念了，但是函数可以嵌套声明使用，方法就没有这个能力了，千万要记得。
   */

}
